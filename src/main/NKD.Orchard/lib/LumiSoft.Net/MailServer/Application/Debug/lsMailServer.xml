<?xml version="1.0"?>
<doc>
    <assembly>
        <name>lsMailServer</name>
    </assembly>
    <members>
        <member name="T:LumiSoft.MailServer.BadLoginManager">
            <summary>
            Bad login manager.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.Put(System.String,System.String)">
            <summary>
            Increases specified IP bad login count for specified user name.
            </summary>
            <param name="ip">IP address.</param>
            <param name="userName">User name.</param>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.IsExceeded(System.String,System.String)">
            <summary>
            Gets if maximum allowed bad logins for specified IP and user name has exceeded.
            </summary>
            <param name="ip">IP address.</param>
            <param name="userName">User name.</param>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.MailServer.BadLoginManager.MaximumBadLogins">
            <summary>
            Gets or sets how many bad logins may be from 1 IP for specified user in specified period.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.BadLoginManager.BadLoginEntry">
            <summary>
            This class holds bad login entry info.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="ip">IP address.</param>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.IncreaseBadLoginCount(System.String)">
            <summary>
            Increases specified user bad logins count.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.GetUserBadLoginCount(System.String)">
            <summary>
            Gets specified user name bad logins count.
            </summary>
            <param name="userName">User name.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.RemoveOlderThan(System.Int32)">
            <summary>
            Removes older than specified seconds entries from collection.
            </summary>
            <param name="seconds">Time in seconds.</param>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.IsEmpty">
            <summary>
            Gets if this entry doesn't contain no user entries.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.IP">
            <summary>
            Gets IP address what is related to this entry.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.CreationTime">
            <summary>
            Gets time when this entry was created.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.UserEntry">
            <summary>
            This class holds user bad login info.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.UserEntry.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="userName">User name.</param>
        </member>
        <member name="M:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.UserEntry.IncreaseBadLoginCount">
            <summary>
            Increases this entry user bad logins count.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.UserEntry.UserName">
            <summary>
            Gets thios entry related user name.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.UserEntry.CreationTime">
            <summary>
            Gets time when this entry was created.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.BadLoginManager.BadLoginEntry.UserEntry.BadLoginCount">
            <summary>
            Gets how many bad logins specified entry user has done. 
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.DeliveryStatusNotification">
            <summary>
            This class is used to generate delivery status notifications(DSN). Defined in RFC 3464.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.DeliveryStatusNotification.CreateDsnMessage(System.String,System.String,System.String,System.String,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,LumiSoft.Net.SMTP.SMTP_DSN_Ret,LumiSoft.Net.Mail.Mail_Message)">
            <summary>
            Creates delivery status notifications(DSN) message. 
            </summary>
            <param name="to">DSN message To.</param>
            <param name="subject">DSN message subject.</param>
            <param name="rtfText">DSN message RTF body text.</param>
            <param name="envelopeID">Envelope ID(MAIL FROM: ENVID).</param>
            <param name="arrivalDate">Message arrival date.</param>
            <param name="receivedFromMTA">The remote host EHLo name from where messages was received.</param>
            <param name="reportingMTA">Reporting MTA name.</param>
            <param name="originalRecipient">Original recipient(RCPT TO: ORCTP).</param>
            <param name="finalRecipient">Final recipient.</param>
            <param name="action">DSN action.</param>
            <param name="statusCode_text">Remote SMTP status code with text.</param>
            <param name="remoteMTA">Remote MTA what returned <b>statusCode_text</b>.</param>
            <param name="lastAttempt">Last delivery attempt.</param>
            <param name="retryUntil">Date time how long server will attempt to deliver message.</param>
            <param name="ret">Specifies what original message part are renturned.</param>
            <param name="message">Original message.</param>
            <returns>Returns created DSN message.</returns>
        </member>
        <member name="T:LumiSoft.MailServer.Logger">
            <summary>
            Provides logging related methods.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Logger.WriteLog(System.String,System.String)">
            <summary>
            Writes specified text to log file.
            </summary>
            <param name="fileName">Log file name.</param>
            <param name="text">Log text.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Logger.WriteLog(System.String,LumiSoft.Net.Log.LogEntry)">
            <summary>
            Writes specified log entry to log file.
            </summary>
            <param name="file">Log file.</param>
            <param name="e">Log entry to write.</param>
        </member>
        <member name="T:LumiSoft.MailServer.MailServerAuthType_enum">
            <summary>
            Specifies mailserver authentication type.
            </summary>
        </member>
        <member name="F:LumiSoft.MailServer.MailServerAuthType_enum.Integrated">
            <summary>
            Mail server integrated authentication. Uses mailserver user name and password.
            </summary>
        </member>
        <member name="F:LumiSoft.MailServer.MailServerAuthType_enum.Windows">
            <summary>
            Windows authentication. Uses mail server user name and windows password to do authentication.
            </summary>
        </member>
        <member name="F:LumiSoft.MailServer.MailServerAuthType_enum.Ldap">
            <summary>
            LDAP authentication.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.ConvertEx">
            <summary>
            Convert methods.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.ConvertEx.ToString(System.Object)">
            <summary>
            Converts object to string. If value == null, returns "".
            </summary>
            <param name="value">Value to  be converted.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.ConvertEx.ToBoolean(System.Object)">
            <summary>
            Convert object to bool. If value == null or object can't be converted to bool, returns false.
            </summary>
            <param name="value">Value to  be converted.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.ConvertEx.ToBoolean(System.Object,System.Boolean)">
            <summary>
            Convert object to bool. If value == null or object can't be converted to bool, returns false.
            </summary>
            <param name="value">Value to  be converted.</param>
            <param name="defaultValue">If parsing fails, this default value is used then.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.ConvertEx.ToInt32(System.Object)">
            <summary>
            Convert object to int. If value == null or object can't be converted to int, returns 0.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.MailServer.Error">
            <summary>
            Error handling.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Error.DumpError(System.Exception)">
            <summary>
            Writes error to error log file.
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:LumiSoft.MailServer.Error.DumpError(System.String,System.Exception)">
            <summary>
            Writes error to error log file.
            </summary>
            <param name="virtualServer">Virtual server name.</param>
            <param name="x"></param>
        </member>
        <member name="M:LumiSoft.MailServer.Error.DumpError(System.Exception,System.Diagnostics.StackTrace)">
            <summary>
            Writes error to error log file.
            </summary>
            <param name="x"></param>
            <param name="stackTrace"></param>
        </member>
        <member name="M:LumiSoft.MailServer.Error.DumpError(System.String,System.Exception,System.Diagnostics.StackTrace)">
            <summary>
            Writes error to error log file.
            </summary>
            <param name="virtualServer">Virtual server name.</param>
            <param name="x"></param>
            <param name="stackTrace"></param>
        </member>
        <member name="M:LumiSoft.MailServer.Error.DumpError(System.String,System.String)">
            <summary>
            Writes error to error log file.
            </summary> 
            <param name="virtualServer">Virtual server name.</param>
            <param name="errorText">Error text to dump.</param>
        </member>
        <member name="P:LumiSoft.MailServer.Error.ErrorFilePath">
            <summary>
            Gets or sets error file path.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.FetchPop3">
            <summary>
            Downloads messages from remote pop3 server to local server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.FetchPop3.#ctor(LumiSoft.MailServer.VirtualServer,LumiSoft.MailServer.IMailServerApi)">
            <summary>
            Default constructor.
            </summary>
            <param name="server"></param>
            <param name="api"></param>
        </member>
        <member name="M:LumiSoft.MailServer.FetchPop3.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.FetchPop3.Pop3_WriteLog(System.Object,LumiSoft.Net.Log.WriteLogEventArgs)">
            <summary>
            This method is called when new POP3 log entry available.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.FetchPop3.StartFetching">
            <summary>
            Starts messages fetching.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.FetchPop3.Enabled">
            <summary>
            Gets or sets if fetch remote messages service is enabled.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.FetchPop3.IsFetching">
            <summary>
            Gets if fetching in progress.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.FetchPop3.FetchTime">
            <summary>
            Gets if time to fetch.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.FetchPop3.LogPath">
            <summary>
            Gets or sets log path.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.FetchPop3.LogCommands">
            <summary>
            Gets or sets if to log fetch pop3 commands.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.FetchPop3.FetchInterval">
            <summary>
            Gets or sets fetch interval(in seconds).
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer._MessageRuleAction_FTP_AsyncSend">
            <summary>
            FTP asynchronous file uploader. This class is used by internally by 'Store To FTP Folder' message rule action.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer._MessageRuleAction_FTP_AsyncSend.#ctor(System.String,System.Int32,System.String,System.String,System.String,System.IO.Stream,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="server">FTP server.</param>
            <param name="port">FTP server port.</param>
            <param name="user">User name.</param>
            <param name="password">Password.</param>
            <param name="folder">FTP folder.</param>
            <param name="data">Data to store to server.</param>
            <param name="fileName">File name to add to stored data.</param>
        </member>
        <member name="M:LumiSoft.MailServer._MessageRuleAction_FTP_AsyncSend.Send">
            <summary>
            Sends message.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.GlobalMessageRuleActionResult">
            <summary>
            Implements GlobalMessageRuleProcessor.DoActions method result data.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.GlobalMessageRuleActionResult.#ctor(System.Boolean,System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="deleteMessage">Specifies if message must be deleted.</param>
            <param name="storeFolder">Specifies message folder where message must be stored. Pass null if not specified.</param>
            <param name="errorText">Gets SMTP error text what to report to connected client. Pass null if not specified.</param>
        </member>
        <member name="P:LumiSoft.MailServer.GlobalMessageRuleActionResult.DeleteMessage">
            <summary>
            Gets if message must be deleted.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.GlobalMessageRuleActionResult.StoreFolder">
            <summary>
            Gets to what message folder to store message. Returns null if not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.GlobalMessageRuleActionResult.ErrorText">
            <summary>
            Gets SMTP error text what to report to connected client. Returns null if not specified.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.GlobalMessageRuleProcessor">
            <summary>
            Global messages rule engine.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.GlobalMessageRuleProcessor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.GlobalMessageRuleProcessor.CheckMatchExpressionSyntax(System.String)">
            <summary>
            Checks match expression syntax. Throws exception if syntax isn't valid.
            </summary>
            <param name="matchExpression">Match expression string.</param>
        </member>
        <member name="M:LumiSoft.MailServer.GlobalMessageRuleProcessor.Match(System.String,System.String,System.String[],LumiSoft.Net.SMTP.Server.SMTP_Session,LumiSoft.Net.Mail.Mail_Message,System.Int32)">
            <summary>
            Checks if specified message matches to specified criteria.
            </summary>
            <param name="matchExpression">Match expression.</param>
            <param name="mailFrom">SMTP MAIL FROM: command email value.</param>
            <param name="rcptTo">SMTP RCPT TO: command email values.</param>
            <param name="smtpSession">SMTP current session.</param>
            <param name="mime">Message to match.</param>
            <param name="messageSize">Message size in bytes.</param>
            <returns>Returns true if message matches to specified criteria.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.GlobalMessageRuleProcessor.Match(System.Boolean,LumiSoft.Net.StringReader,System.String,System.String[],LumiSoft.Net.SMTP.Server.SMTP_Session,LumiSoft.Net.Mail.Mail_Message,System.Int32)">
            <summary>
            Checks if specified message matches to specified criteria.
            </summary>
            <param name="syntaxCheckOnly">Specifies if syntax check is only done. If true no matching is done.</param>
            <param name="r">Match expression reader what contains match expression.</param>
            <param name="mailFrom">SMTP MAIL FROM: command email value.</param>
            <param name="rcptTo">SMTP RCPT TO: command email values.</param>
            <param name="smtpSession">SMTP current session.</param>
            <param name="mime">Message to match.</param>
            <param name="messageSize">Message size in bytes.</param>
            <returns>Returns true if message matches to specified criteria.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.GlobalMessageRuleProcessor.DoActions(System.Data.DataView,LumiSoft.MailServer.VirtualServer,System.IO.Stream,System.String,System.String[])">
            <summary>
            Executes specified actions.
            </summary>
            <param name="dvActions">Dataview what contains actions to be executed.</param>
            <param name="server">Reference to owner virtual server.</param>
            <param name="message">Recieved message.</param>
            <param name="sender">MAIL FROM: command value.</param>
            <param name="to">RCPT TO: commands values.</param>
        </member>
        <member name="M:LumiSoft.MailServer.GlobalMessageRuleProcessor.ClauseItemsToString(LumiSoft.MailServer.GlobalMessageRuleProcessor.PossibleClauseItem)">
            <summary>
            Converts PossibleClauseItem flags to human readable string.
            </summary>
            <param name="clauseItems">Cause item falgs to convert.</param>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.MailServer._MessageRuleAction_HTTP_Async">
            <summary>
            HTTP asynchronous message poster. This class is used by internally by 'Store To HTTP' message rule action.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer._MessageRuleAction_HTTP_Async.#ctor(System.String,System.IO.Stream)">
            <summary>
            Default constructor.
            </summary>
            <param name="url">Url where to post message. Exmaple: http://domain.com/upload.aspx .</param>
            <param name="message">Message to post. Stream position must be where message begins.</param>
        </member>
        <member name="M:LumiSoft.MailServer._MessageRuleAction_HTTP_Async.Post">
            <summary>
            Posts message to web page via HTTP.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer._MessageRuleAction_NNTP_Async">
            <summary>
            NNTP asynchronous message poster. This class is used by internally by 'Store To NNTP Newsgroup' message rule action.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer._MessageRuleAction_NNTP_Async.#ctor(System.String,System.Int32,System.String,System.IO.MemoryStream)">
            <summary>
            Default constructor.
            </summary>
            <param name="server">NNTP server.</param>
            <param name="port">NNTP server port. Default is 119.</param>
            <param name="newsgroup">NNTP newsgroup where to post message.</param>
            <param name="message">Message to post.</param>
        </member>
        <member name="M:LumiSoft.MailServer._MessageRuleAction_NNTP_Async.Post">
            <summary>
            Posts message.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.MainX">
            <summary>
            Application main class.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.MainX.Main(System.String[])">
            <summary>
            Application main entry point.
            </summary>
            <param name="args">Command line argumnets.</param>
        </member>
        <member name="M:LumiSoft.MailServer.MainX.CurrentDomain_UnhandledException(System.Object,System.UnhandledExceptionEventArgs)">
            <summary>
            This is called when unhandled exception happened.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LumiSoft.MailServer.MainX.Application_ThreadException(System.Object,System.Threading.ThreadExceptionEventArgs)">
            <summary>
            This method is called when unhandled excpetion happened.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:LumiSoft.MailServer.Monitoring.MonitoringServer">
            <summary>
            LumiSoft mailserver monitoring server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServer.#ctor(LumiSoft.MailServer.Server)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Monitoring.MonitoringServer.MaxBadCommands">
            <summary>
            Gets or sets how many bad commands session can have before it's terminated. Value 0 means unlimited.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
            <exception cref="T:System.ArgumentException">Is raised when invalid value is passed.</exception>
        </member>
        <member name="P:LumiSoft.MailServer.Monitoring.MonitoringServer.MailServer">
            <summary>
            Gets reference to MailServer.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.Monitoring.MonitoringServerSession">
            <summary>
            Monitoring server session.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.Start">
            <summary>
            Starts session processing.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.OnError(System.Exception)">
            <summary>
            Is called when session has processing error.
            </summary>
            <param name="x">Exception happened.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.OnTimeout">
            <summary>
            This method is called when specified session times out.
            </summary>
            <remarks>
            This method allows inhereted classes to report error message to connected client.
            Session will be disconnected after this method completes.
            </remarks>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.BeginReadCmd">
            <summary>
            Starts reading incoming command from the connected client.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.ProcessCmd(LumiSoft.Net.IO.SmartStream.ReadLineAsyncOP)">
            <summary>
            Completes command reading operation.
            </summary>
            <param name="op">Operation.</param>
            <returns>Returns true if server should start reading next command.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.QUIT">
            <summary>
            QUIT command.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.WriteLine(System.String)">
            <summary>
            Sends and logs specified line to connected host.
            </summary>
            <param name="line">Line to send.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.Write(System.Byte[])">
            <summary>
            Sends and logs specified data to connected host.
            </summary>
            <param name="data">Data to send.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.Write(System.IO.Stream)">
            <summary>
            Sends and logs specified stream data to connected host.
            </summary>
            <param name="stream">Stream data to send.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.CompressDataSet(System.Data.DataSet)">
            <summary>
            Compresses specified dataset with GZIP.
            </summary>
            <param name="ds">DataSet to compress.</param>
            <returns>Returns gzipped dataset xml data.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.Monitoring.MonitoringServerSession.DataView_To_DataSet(System.Data.DataView)">
            <summary>
            Copies DataView.Table stucture and it's data to new data set.
            </summary>
            <param name="dv"></param>
            <returns></returns>
        </member>
        <member name="P:LumiSoft.MailServer.Monitoring.MonitoringServerSession.Server">
            <summary>
            Gets session owner management server.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.MailServer.Monitoring.MonitoringServerSession.AuthenticatedUserIdentity">
            <summary>
            Gets authenticated user identity or null if user has not authenticated.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="T:LumiSoft.MailServer.RecycleBinManager">
            <summary>
            Recycle bin messages manager.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.RecycleBinManager.#ctor(LumiSoft.MailServer.IMailServerApi)">
            <summary>
            Default constructor.
            </summary>
            <param name="api">Virtual server api</param>
        </member>
        <member name="M:LumiSoft.MailServer.RecycleBinManager.Dispose">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.RecycleBinManager.DoCleanUp">
            <summary>
            Deletes recycle bin messages what 'delete after days' has exceeded.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.RecycleBinManager.LastCleanUpTime">
            <summary>
            Gets when last clean up was done.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.Relay.RelayMessageInfo">
            <summary>
            This class holds relay message internal info.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayMessageInfo.#ctor(System.String,System.String,System.String,System.String,LumiSoft.Net.SMTP.SMTP_DSN_Notify,LumiSoft.Net.SMTP.SMTP_DSN_Ret,System.DateTime,System.Boolean,LumiSoft.Net.HostEndPoint)">
            <summary>
            Default constructor.
            </summary>
            <param name="envelopeID">Envelope ID_(MAIL FROM: ENVID).</param>
            <param name="sender">Senders email address.</param>
            <param name="recipient">Recipients email address.</param>
            <param name="originalRecipient">Original recipient(RCPT TO: ORCPT).</param>
            <param name="notify">DSN notify condition.</param>
            <param name="ret">Specifies what parts of message are returned in DSN report.</param>
            <param name="date">Message date.</param>
            <param name="delayedDeliveryNotifySent">Specifies if delayed delivery notify has been sent.</param>
            <param name="hostEndPoint">Host end point where message must be sent. Value null means DNS is used to get message target host.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>sender</b> or <b>recipient</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayMessageInfo.Parse(System.Byte[])">
            <summary>
            Parses RelayMessageInfo from byte[] data.
            </summary>
            <param name="value">RelayMessageInfo data.</param>
            <returns>Returns parsed RelayMessageInfo.</returns>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayMessageInfo.ToByte">
            <summary>
            Stores RelayMessageInfo to byte[].
            </summary>
            <returns>Returns RelayMessageInfo as byte[] data.</returns>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayMessageInfo.EnvelopeID">
            <summary>
            Gets envelope ID(MAIL FROM: ENVID). Value null means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayMessageInfo.Sender">
            <summary>
            Gets sender email address.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayMessageInfo.Recipient">
            <summary>
            Gets recipient email address.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayMessageInfo.OriginalRecipient">
            <summary>
            Gets message original recipient(RCPT TO: ORCPT). Value null means not specified.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayMessageInfo.Date">
            <summary>
            Gets message receive date.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayMessageInfo.DSN_Notify">
            <summary>
            Gets DSN Notify value.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayMessageInfo.DSN_Ret">
            <summary>
            Gets DSN RET value.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayMessageInfo.DelayedDeliveryNotifySent">
            <summary>
            Gets or sets if delayed delivery notify sent.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayMessageInfo.HostEndPoint">
            <summary>
            Gets host end point where message must be sent. Value null means DNS is used to get message target host.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.Relay.RelayServer">
            <summary>
            This class implements relay server in LumiSoft Mail Server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayServer.#ctor(LumiSoft.MailServer.VirtualServer)">
            <summary>
            Default constructor.
            </summary>
            <param name="virtualServer">Owner virtual server.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>virtualServer</b> is null.</exception>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayServer.Start">
            <summary>
            Starts relay server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayServer.StoreRelayMessage(System.String,System.String,System.IO.Stream,LumiSoft.Net.HostEndPoint,System.String,System.String,System.String,LumiSoft.Net.SMTP.SMTP_DSN_Notify,LumiSoft.Net.SMTP.SMTP_DSN_Ret)">
            <summary>
            Stores message for relay.
            </summary>
            <param name="id">Message ID. Guid value is suggested.</param>
            <param name="envelopeID">Envelope ID_(MAIL FROM: ENVID).</param>
            <param name="message">Message to store. Message will be readed from current position of stream.</param>
            <param name="targetHost">Target host or IP where to send message. This value can be null, then DNS MX o A record is used to deliver message.</param>
            <param name="sender">Sender address to report to target server.</param>
            <param name="to">Message recipient address.</param>
            <param name="originalRecipient">Original recipient(RCPT TO: ORCPT).</param>
            <param name="notify">DSN notify condition.</param>
            <param name="ret">Specifies what parts of message are returned in DSN report.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>id</b>,<b>message</b> or <b>to</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the argumnets has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayServer.StoreRelayMessage(System.String,System.String,System.String,System.DateTime,System.IO.Stream,LumiSoft.Net.HostEndPoint,System.String,System.String,System.String,LumiSoft.Net.SMTP.SMTP_DSN_Notify,LumiSoft.Net.SMTP.SMTP_DSN_Ret)">
            <summary>
            Stores message for relay.
            </summary>
            <param name="queueName">Queue name where to store message.</param>
            <param name="id">Message ID. Guid value is suggested.</param>
            <param name="envelopeID">Envelope ID_(MAIL FROM: ENVID).</param>
            <param name="date">Message date.</param>
            <param name="message">Message to store. Message will be readed from current position of stream.</param>
            <param name="targetHost">Target host or IP where to send message. This value can be null, then DNS MX o A record is used to deliver message.</param>
            <param name="sender">Sender address to report to target server.</param>
            <param name="to">Message recipient address.</param>
            <param name="originalRecipient">Original recipient(RCPT TO: ORCPT).</param>
            <param name="notify">DSN notify condition.</param>
            <param name="ret">Specifies what parts of message are returned in DSN report.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>queueName</b>,<b>id</b>,<b>message</b> or <b>to</b> is null.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the argumnets has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayServer.ProcessRelay">
            <summary>
            This loop method processes "Relay" messages while server is running.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayServer.ProcessRelayRetry">
            <summary>
            This loop method processes "Relay Retry" messages while server is running.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayServer.OnSessionCompleted(LumiSoft.Net.SMTP.Relay.Relay_Session,System.Exception)">
            <summary>
            Raises <b>SessionCompleted</b> event.
            </summary>
            <param name="session">Session what completed processing.</param>
            <param name="exception">Exception happened or null if relay completed successfully.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayServer.OnError(System.Exception)">
            <summary>
            Raises <b>Error</b> event.
            </summary>
            <param name="x">Exception happned.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayServer.Send_DSN_Failed(LumiSoft.Net.SMTP.Relay.Relay_Session,System.String)">
            <summary>
            Creates and sends "Message delivery failed" to message sender.
            </summary>
            <param name="session">Relay_Session.</param>
            <param name="error">Permanent error happened.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayServer.Send_DSN_Delayed(LumiSoft.Net.SMTP.Relay.Relay_Session,System.String)">
            <summary>
            Creates and sends "Delayed delivery notify" to message sender.
            </summary>
            <param name="session">Relay_Session.</param>
            <param name="error">Error happened.</param>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayServer.Send_DSN_Relayed(LumiSoft.Net.SMTP.Relay.Relay_Session)">
            <summary>
            Sends deliver-status-notification 'success' message.
            </summary>
            <param name="session">Relay session.</param>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayServer.RelayInterval">
            <summary>
            Gets or sets relay interval seconds.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayServer.RelayRetryInterval">
            <summary>
            Gets or sets relay retry interval seconds.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayServer.DelayedDeliveryNotifyAfter">
            <summary>
            Gets or sets after how many minutes delayed delivery notify is sent.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayServer.UndeliveredAfter">
            <summary>
            Gets or sets after how many minutes message is considered undelivered. 
            Undelivered notification is sent to sender.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayServer.DelayedDeliveryMessage">
            <summary>
            Gets or sets message template what is sent when message delayed delivery, immediate delivery failed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayServer.UndeliveredMessage">
            <summary>
            Gets or sets message template what is sent when message delivery has failed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="P:LumiSoft.MailServer.Relay.RelayServer.StoreUndeliveredMessages">
            <summary>
            Gets or sets if undelivered messages are stored.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Is raised when this object is disposed and this property is accessed.</exception>
        </member>
        <member name="T:LumiSoft.MailServer.Relay.RelayVariablesManager">
            <summary>
            This class replaces all variables to actual values for 
            undelivered notice and delayed delivery warning messages.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayVariablesManager.#ctor(LumiSoft.MailServer.Relay.RelayServer,LumiSoft.Net.SMTP.Relay.Relay_Session,System.String,LumiSoft.Net.Mail.Mail_Message)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayVariablesManager.Process(System.String)">
            <summary>
            Search variables and replace them with values.
            </summary>
            <param name="text">Text to process.</param>
            <returns>Returns text with variables replaced with real values.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.Relay.RelayVariablesManager.ReplaceVariable(System.String)">
            <summary>
            Replaces specified variable with actual value.
            </summary>
            <param name="variable">Variable to replace.</param>
        </member>
        <member name="T:LumiSoft.MailServer.Resources.ResManager">
            <summary>
            Resource manager.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Resources.ResManager.GetIcon(System.String)">
            <summary>
            Gets specified icon.
            </summary>
            <param name="iconName">Icon name.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.Resources.ResManager.GetImage(System.String)">
            <summary>
            Gets specified image.
            </summary>
            <param name="imageName">Image name.</param>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.MailServer.SCore">
            <summary>
            Server utility functions.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.SCore.IsMatch(System.String,System.String)">
            <summary>
            Checks if text matches to search pattern.
            </summary>
            <param name="pattern"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.SCore.IsAstericMatch(System.String,System.String)">
            <summary>
            Checks if text matches to search pattern.
            </summary>
            <param name="pattern"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.SCore.PathFix(System.String)">
            <summary>
            Fixes path separator, replaces / \ with platform separator char.
            </summary>
            <param name="path">Path to fix.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.SCore.StreamCopy(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copies all data from source stream to destination stream.
            Copy starts from source stream current position and will be copied to the end of source stream.
            </summary>
            <param name="source">Source stream.</param>
            <param name="destination">Destination stream.</param>
        </member>
        <member name="M:LumiSoft.MailServer.SCore.RtfToText(System.String)">
            <summary>
            Converts RTF text to plain text.
            </summary>
            <param name="rtfText">RTF text to convert.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.SCore.RtfToHtml(System.String)">
            <summary>
            Converts RTF text to HTML.
            </summary>
            <param name="rtfText">RTF text to convert.</param>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.MailServer.Server">
            <summary>
            This class represent mail server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Server.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Server.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Server.Start">
            <summary>
            Starts mail server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Server.Stop">
            <summary>
            Stops mail server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.Server.LoadApi(System.String,System.String,System.String)">
            <summary>
            Loads specified virtual server API.
            </summary>
            <param name="assembly">API assembly name.</param>
            <param name="type">API type name.</param>
            <param name="initString">API init string</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.Server.LoadVirtualServers">
            <summary>
            Loads virtual server from xml file.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Server.StartupPath">
            <summary>
            Gets path where mail server started.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Server.Running">
            <summary>
            Gets if mail server is running.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Server.StartTime">
            <summary>
            Gets when server started. Returns DateTime.MinValue if server not running.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Server.VirtualServers">
            <summary>
            Gets mail server running virtual servers. This property is available only if this.Running = true.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.Server.Sessions">
            <summary>
            Gets all mail server current sessions.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.ServerReturnMessage">
            <summary>
            This class represents server return message template. 
            For example for undelivered messagege notice, delayed delivery warning, ... .
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.ServerReturnMessage.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="subject">Message subject template.</param>
            <param name="bodyTextRft">Messge body text template in RTF format.</param>
        </member>
        <member name="P:LumiSoft.MailServer.ServerReturnMessage.Subject">
            <summary>
            Gets message subject template.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.ServerReturnMessage.BodyTextRtf">
            <summary>
            Gets body text template in RTF format.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.TextDb">
            <summary>
            Text database(CSV,TAB,SP delimited text database).
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.#ctor(System.Char)">
            <summary>
            Default constructor.
            </summary>
            <param name="fieldDelimiter">Field value delimiter. Comma,Tab,Space, ... . Restricted chars are: '"' '!' '#'.</param>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.Open(System.String)">
            <summary>
            Opens specified text database.
            </summary>
            <param name="file">Text database file name with optional path.</param>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.OpenOrCreate(System.String)">
            <summary>
            Opens or creates specified text database.
            </summary>
            <param name="file">Text database file name with optional path.</param>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.OpenRead(System.String)">
            <summary>
            Opens specified text database.
            </summary>
            <param name="file">Text database file name with optional path.</param>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.Close">
            <summary>
            Closes active text database file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.MoveNext">
            <summary>
            Moves current row to next row. Returns true if there is next row and current row moved.
            </summary>
            <returns>Returns true if there is next row and current row moved.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.Append(System.String[])">
            <summary>
            Appends new record to the end of database file. 
            </summary>
            <param name="values">Row values.</param>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.AppendComment(System.String)">
            <summary>
            Appends new comment text to the end of database file. 
            </summary>
            <param name="text">Comment text.</param>
        </member>
        <member name="M:LumiSoft.MailServer.TextDb.OpenOrCreateDb(System.String)">
            <summary>
            Opens or creates db file.
            </summary>
            <param name="file">Database file name.</param>
        </member>
        <member name="P:LumiSoft.MailServer.TextDb.IsOpen">
            <summary>
            Gets if there is active database.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.TextDb.CurrentRowString">
            <summary>
            Gets current row string line. Returns null if no current record.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.TextDb.CurrentRow">
            <summary>
            Gets current row values. Returns null if no current record.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.UI.wfrm_Install">
            <summary>
            LumiSoft mail server installer.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_Install.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_Install.InitUI">
            <summary>
            Creates and intializes UI.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_Install.IsServiceInstalled">
            <summary>
            Gets if mail server service is installed.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LumiSoft.MailServer.UI.wfrm_Tray">
            <summary>
            Adds tray app support to mail server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_Tray.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_Tray.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_Tray.InitUI">
            <summary>
            Creates and intializes UI.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_Tray.Start">
            <summary>
            Starts mail server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_Tray.Stop">
            <summary>
            Stops server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_Tray.Exit">
            <summary>
            Exits tray application, stops server.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.UI.wfrm_WinForm">
            <summary>
            Run as -winform window.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_WinForm.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.UI.wfrm_WinForm.InitUI">
            <summary>
            Creates and initializes window UI.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.VirtualServer">
            <summary>
            Implements mail server virtual server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.#ctor(LumiSoft.MailServer.Server,System.String,System.String,System.String,LumiSoft.MailServer.IMailServerApi)">
            <summary>
            Default constructor.
            </summary>
            <param name="server">Server what owns this virtual server.</param>
            <param name="id">Virtual server ID.</param>
            <param name="name">Virtual server name.</param>
            <param name="apiInitString">Virtual server api initi string.</param>
            <param name="api">Virtual server API.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.m_pSmtpServer_SessionCreated(System.Object,LumiSoft.Net.TCP.TCP_ServerSessionEventArgs{LumiSoft.Net.SMTP.Server.SMTP_Session})">
            <summary>
            Is called when new SMTP server session has created.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.m_pSmtpServer_Session_Started(System.Object,LumiSoft.Net.SMTP.Server.SMTP_e_Started)">
            <summary>
            Is called when SMTP server sessions starts session processing.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.m_pSmtpServer_Session_Ehlo(System.Object,LumiSoft.Net.SMTP.Server.SMTP_e_Ehlo)">
            <summary>
            Is called when SMTP server session gets EHLO/HELO command.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.m_pSmtpServer_Session_MailFrom(System.Object,LumiSoft.Net.SMTP.Server.SMTP_e_MailFrom)">
            <summary>
            Is called when SMTP server session gets MAIL command.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.m_pSmtpServer_Session_RcptTo(System.Object,LumiSoft.Net.SMTP.Server.SMTP_e_RcptTo)">
            <summary>
            Is called when SMTP server session gets RCPT command.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.m_pSmtpServer_Session_GetMessageStream(System.Object,LumiSoft.Net.SMTP.Server.SMTP_e_Message)">
            <summary>
            Is raised when SMTP server session needs to get stream where to store incoming message.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.m_pSmtpServer_Session_MessageStoringCanceled(System.Object,System.EventArgs)">
            <summary>
            Is called when message storing has canceled.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.m_pSmtpServer_Session_MessageStoringCompleted(System.Object,LumiSoft.Net.SMTP.Server.SMTP_e_MessageStored)">
            <summary>
            Is called when SMTP server has completed message storing.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.m_pPop3Server_SessionCreated(System.Object,LumiSoft.Net.TCP.TCP_ServerSessionEventArgs{LumiSoft.Net.POP3.Server.POP3_Session})">
            <summary>
            Is called when new POP3 server session has created.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.m_pImapServer_SessionCreated(System.Object,LumiSoft.Net.TCP.TCP_ServerSessionEventArgs{LumiSoft.Net.IMAP.Server.IMAP_Session})">
            <summary>
            Is called when new POP3 server session has created.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.m_pSipServer_Authenticate(LumiSoft.Net.SIP.Proxy.SIP_AuthenticateEventArgs)">
            <summary>
            This method is called by SIP proxy when it need to authenticate specified user.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.m_pSipServer_Error(System.Object,LumiSoft.Net.ExceptionEventArgs)">
            <summary>
            This method is called when unhandeld SIP server error happens.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.Start">
            <summary>
            Starts this virtual server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.Stop">
            <summary>
            Stops this virtual server.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.Authenticate(System.Net.IPAddress,System.String,System.String)">
            <summary>
            Authenticates specified user.
            </summary>
            <param name="ip">IP address of remote computer.</param>
            <param name="userName">User name.</param>
            <param name="password">Password.</param>
            <returns>Returns true if user authenticated sucessfully, otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>ip</b> or <b>userName</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.IsRelayAllowed(System.String,System.Net.IPAddress)">
            <summary>
            Checks if relay is allowed to specified User/IP.
            First user 'Allow Relay' checked, if not allowed, then checked if relay denied for that IP,
            at last checks if relay is allowed for that IP.
            </summary>
            <param name="userName"></param>
            <param name="ip"></param>
            <returns>Returns true if relay is allowed.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.IsAccessAllowed(LumiSoft.MailServer.Service_enum,System.Net.IPAddress)">
            <summary>
            Checks if specified service access is allowed for specified IP.
            </summary>
            <param name="service">SMTP or POP3 or IMAP.</param>
            <param name="ip"></param>
            <returns>Returns true if allowed.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.PaseCertificate(System.Object)">
            <summary>
            Parses x509 certificate from specified data. Returns null if no certificate to load.
            </summary>
            <param name="cert">Certificate data.</param>
            <returns>Returns parse certificate or null if no certificate.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.ParseSslMode(System.String)">
            <summary>
            Parses SSL mode from string.
            </summary>
            <param name="value">Ssl mode string.</param>
            <returns>Returns parsed SSL mode.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.FillUserInfo(LumiSoft.Net.AUTH.AUTH_e_UserInfo)">
            <summary>
            Gets and fills specified user info.
            </summary>
            <param name="userInfo">User info.</param>
            <exception cref="T:System.ArgumentNullException">Is riased when <b>userInfo</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.ProcessAndStoreMessage(System.String,System.String[],System.IO.Stream,LumiSoft.Net.SMTP.Server.SMTP_e_MessageStored)">
            <summary>
            Processes and stores message.
            </summary>
            <param name="sender">Mail from.</param>
            <param name="recipient">Recipient to.</param>
            <param name="msgStream">Message stream. Stream position must be there where message begins.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.ProcessAndStoreMessage(System.String,System.String,LumiSoft.Net.SMTP.SMTP_DSN_Ret,LumiSoft.Net.SMTP.Server.SMTP_RcptTo[],System.IO.Stream,LumiSoft.Net.SMTP.Server.SMTP_e_MessageStored)">
            <summary>
            Processes and stores message.
            </summary>
            <param name="envelopeID">Envelope ID_(MAIL FROM: ENVID).</param>
            <param name="sender">Mail from.</param>
            <param name="ret">Specifies what parts of message are returned in DSN report.</param>
            <param name="recipients">Message recipients.</param>
            <param name="msgStream">Message stream. Stream position must be there where message begins.</param>
            <param name="e">Event data.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>recipients</b> or <b>msgStream</b> is nulll reference.</exception>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.ProcessUserMsg(System.String,System.String,System.String,System.String,System.IO.Stream,LumiSoft.Net.SMTP.Server.SMTP_e_MessageStored)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="recipient"></param>
            <param name="userName"></param>
            <param name="storeFolder">Message folder where message will be stored. For example 'Inbox'.</param>
            <param name="msgStream"></param>
            <param name="e">Event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.AstericMatch(System.String,System.String)">
            <summary>
            Checks if specified text matches to specified asteric pattern.
            </summary>
            <param name="pattern">Asteric pattern. Foe example: *xxx,*xxx*,xx*aa*xx, ... .</param>
            <param name="text">Text to match.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.FolderMatches(System.String,System.String)">
            <summary>
            Gets if folder matches to specified folder pattern.
            </summary>
            <param name="folderPattern">Folder pattern. * and % between path separators have same meaning (asteric pattern). 
            If % is at the end, then matches only last folder child folders and not child folder child folders.</param>
            <param name="folder">Folder name with full path.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.GenerateMessageMissing">
            <summary>
            Generates message missing message.
            </summary>
            <returns>Returns message missing message.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.VirtualServer.OnError(System.Exception)">
            <summary>
            Is called when error happens.
            </summary>
            <param name="x"></param>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.ID">
            <summary>
            Gets virtual server ID.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.Enabled">
            <summary>
            Starts or stops server.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.Name">
            <summary>
            Gets virtual server name
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.API">
            <summary>
            Gets this virtual server API.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.MailStorePath">
            <summary>
            Gets mailstore path.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.DnsClient">
            <summary>
            Gets virtual server DNS client.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.SmtpServer">
            <summary>
            Gets this virtual server SMTP server. Returns null if server is stopped.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.Pop3Server">
            <summary>
            Gets this virtual server POP3 server. Returns null if server is stopped.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.ImapServer">
            <summary>
            Gets this virtual server IMAP server. Returns null if server is stopped.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.RelayServer">
            <summary>
            Gets this virtual server Relay server. Returns null if server is stopped.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.VirtualServer.SipServer">
            <summary>
            Gets this virtual server SIP server. Returns null if server is stopped.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.WinLogon">
            <summary>
            Windows logon provider.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.WinLogon.Logon(System.String,System.String,System.String)">
            <summary>
            Logs user to windows.
            </summary>
            <param name="domain">Windows domain.</param>
            <param name="userName">User name.</param>
            <param name="password">Password.</param>
            <returns>Returns true if logon successful.</returns>
        </member>
        <member name="T:LumiSoft.MailServer.XmlTable">
            <summary>
            Represents simple xml serializable/deserializable name/value table.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.XmlTable.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.XmlTable.Add(System.String,System.String)">
            <summary>
            Adds name/value to table.
            </summary>
            <param name="name">Name of the value pair.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:LumiSoft.MailServer.XmlTable.GetValue(System.String)">
            <summary>
            Gets value from name/value table.
            </summary>
            <param name="name">Name of value to get.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.XmlTable.Parse(System.Byte[])">
            <summary>
            Parses table from byte[] xml data.
            </summary>
            <param name="data">Table data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.XmlTable.ToStringData">
            <summary>
            Returns string representation of xml table.
            </summary>
            <returns>Returns string representation of xml table.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.XmlTable.ToByteData">
            <summary>
            Returns byte[] representation of xml table.
            </summary>
            <returns>Returns byte[] representation of xml table.</returns>
        </member>
        <member name="P:LumiSoft.MailServer.XmlTable.TableName">
            <summary>
            Gets or sets table name.
            </summary>
        </member>
    </members>
</doc>
