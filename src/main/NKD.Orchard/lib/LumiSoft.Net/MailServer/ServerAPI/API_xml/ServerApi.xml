<?xml version="1.0"?>
<doc>
    <assembly>
        <name>xml_API</name>
    </assembly>
    <members>
        <member name="T:LumiSoft.MailServer.RecycleBinMessageInfo">
            <summary>
            This class holds recycle bin message info.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.RecycleBinMessageInfo.#ctor(System.String,System.DateTime,System.String,System.String,System.Int32,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="messageID">Message ID.</param>
            <param name="deleteTime">Message delete time.</param>
            <param name="user">User name.</param>
            <param name="folder">Folder name with path. This is folder what originally contained message.</param>
            <param name="size">Message size in bytes.</param>
            <param name="envelope">Message IMAP Envelope string.</param>
        </member>
        <member name="P:LumiSoft.MailServer.RecycleBinMessageInfo.MessageID">
            <summary>
            Gets message ID.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.RecycleBinMessageInfo.DeleteTime">
            <summary>
            Gets message delete time.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.RecycleBinMessageInfo.User">
            <summary>
            Gets user name whos message it is.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.RecycleBinMessageInfo.Folder">
            <summary>
            Gets name with path. This is folder what originally contained message.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.RecycleBinMessageInfo.Size">
            <summary>
            Gets message size in bytes,
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.RecycleBinMessageInfo.Envelope">
            <summary>
            Gets message IMAP Envelope string.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.RecycleBinManager">
            <summary>
            Recycle Bin manager.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.RecycleBinManager.GetMessagesInfo(System.String,System.DateTime,System.DateTime)">
            <summary>
            Gets specified folder messages info.
            </summary>
            <param name="user">User who's recyclebin messages to get or null if all users messages.</param>
            <param name="startDate">Messages from specified date. Pass DateTime.MinValue if not used.</param>
            <param name="endDate">Messages to specified date. Pass DateTime.MinValue if not used.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.RecycleBinManager.StoreToRecycleBin(System.String,System.String,System.String)">
            <summary>
            Stores specified message to recycle bin.
            </summary>
            <param name="folderOwner">Folder woner user.</param>
            <param name="folder">Folder what message it is.</param>
            <param name="messageFile">Message file name with path.</param>
        </member>
        <member name="M:LumiSoft.MailServer.RecycleBinManager.GetRecycleBinMessage(System.String)">
            <summary>
            Gets recycle bin message stream. NOTE: This method caller must take care of closing stream.
            </summary>
            <param name="messageID">Message ID if of message what to get.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.RecycleBinManager.DeleteRecycleBinMessage(System.String)">
            <summary>
            Deletes specified message from recycle bin.
            </summary>
            <param name="messageID">Message ID which to restore.</param>
        </member>
        <member name="M:LumiSoft.MailServer.RecycleBinManager.RestoreFromRecycleBin(System.String,LumiSoft.MailServer.IMailServerApi)">
            <summary>
            Restores specified message from recycle bin.
            </summary>
            <param name="messageID">Message ID which to restore.</param>
            <param name="api">Reference to API.</param>
        </member>
        <member name="M:LumiSoft.MailServer.RecycleBinManager.GetFile">
            <summary>
            Gets messages info file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.RecycleBinManager.Vacuum(System.IO.FileStream)">
            <summary>
            Vacuums flags database, deletes deleted rows empty used space from file.
            </summary>
            <param name="fs">Database file stream.</param>
        </member>
        <member name="P:LumiSoft.MailServer.RecycleBinManager.RecycleBinPath">
            <summary>
            Gets or sets recycle bin path.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.UpdateSync">
            <summary>
            Updates synchronizer.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer.xml_API">
            <summary>
            XML API.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="intitString"></param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetDomains">
            <summary>
            Gets domain list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddDomain(System.String,System.String,System.String)">
            <summary>
            Adds new domain.
            </summary>
            <param name="domainID">Domain ID. Suggested value is Guid.NewGuid() .</param>
            <param name="domainName">Domain name. Eg. yourDomain.com .</param>
            <param name="description">Domain description.</param>
            <remarks>Throws exception if specified domain already exists.</remarks>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteDomain(System.String)">
            <summary>
            Deletes specified domain.
            </summary>
            <param name="domainID">Domain ID. Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetDomains">GetDomains()</see> to get valid values.</param>
            <remarks>Deletes specified domain and all domain related data (users,mailing lists,routes).</remarks>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.UpdateDomain(System.String,System.String,System.String)">
            <summary>
            Updates specified domain data.
            </summary>
            <param name="domainID">Domain ID which to update.</param>
            <param name="domainName">Domain name.</param>
            <param name="description">Domain description.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DomainExists(System.String)">
            <summary>
            Checks if specified domain exists.
            </summary>
            <param name="source">Domain name or email address.</param>
            <returns>Returns true if domain exists.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetUsers(System.String)">
            <summary>
            Gets user list in specified domain.
            </summary>
            <param name="domainName">Domain which user list to retrieve.To get all use value 'ALL'.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetUserID(System.String)">
            <summary>
            Gets user ID from user name. Returns null if user doesn't exist.
            </summary>
            <param name="userName">User name.</param>
            <returns>Returns user ID or null if user doesn't exist.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddUser(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,LumiSoft.MailServer.UserPermissions_enum)">
            <summary>
            Adds new user to specified domain.
            </summary>
            <param name="userID">User ID. Suggested value is Guid.NewGuid() .</param>
            <param name="userName">User login name.</param>
            <param name="fullName">User full name.</param> 
            <param name="password">User login password.</param>
            <param name="description">User description.</param>
            <param name="domainName">Domain where to add user. Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetDomains">GetDomains()</see> to get valid values.</param>
            <param name="mailboxSize">Maximum mailbox size.</param>
            <param name="enabled">Sepcifies if user is enabled.</param>
            <param name="permissions">Specifies user permissions.</param>
            <remarks>Throws exception if specified user already exists.</remarks>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteUser(System.String)">
            <summary>
            Deletes user.
            </summary>
            <param name="userID">User id of the user which to delete. Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetUsers(System.String)">&gt;GetUsers()</see> to get valid values.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.UpdateUser(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,LumiSoft.MailServer.UserPermissions_enum)">
            <summary>
            Updates new user to specified domain.
            </summary>
            <param name="userID">User id of the user which to update. Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetUsers(System.String)">&gt;GetUsers()</see> to get valid values.</param>
            <param name="userName">User login name.</param>
            <param name="fullName">User full name.</param>
            <param name="password">User login password.</param>
            <param name="description">User description.</param>
            <param name="domainName">Domain where to add user. Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetDomains">&gt;GetDomains()</see> to get valid values.</param>
            <param name="mailboxSize">Maximum mailbox size.</param>
            <param name="enabled">Sepcifies if user is enabled.</param>
            <param name="permissions">Specifies user permissions.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddUserAddress(System.String,System.String)">
            <summary>
            Add new email address to user.
            </summary>
            <param name="userName">User name. Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetUsers(System.String)">&gt;GetUsers()</see> to get valid values.</param>
            <param name="emailAddress">Email address to add.</param>
            <remarks>Throws exception if specified user email address exists.</remarks>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteUserAddress(System.String)">
            <summary>
            Deletes specified email address from user. 
            </summary>
            <param name="emailAddress">Email address to delete.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetUserAddresses(System.String)">
            <summary>
            Gets user email addresses.
            </summary>
            <param name="userName"> Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetUsers(System.String)">GetUsers()</see> to get valid values.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.UserExists(System.String)">
            <summary>
            Checks if user exists.
            </summary>
            <param name="userName">User name.</param>
            <returns>Returns true if user exists.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.MapUser(System.String)">
            <summary>
            Maps email address to user. Returns user or null if such email address won't exist.
            </summary>
            <param name="emailAddress"></param>
            <returns>Returns user or null if such email address won't exist.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.ValidateMailboxSize(System.String)">
            <summary>
            Checks if specified mailbox size is exceeded.
            </summary>
            <param name="userName">User name. Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetUsers(System.String)">GetUsers()</see> to get valid values.</param>
            <returns>Returns true if exceeded.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetUserPermissions(System.String)">
            <summary>
            Gets specified user permissions.
            </summary>
            <param name="userName">User name.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetUserLastLoginTime(System.String)">
            <summary>
            Gets user last login time.
            </summary>
            <param name="userName">User name who's last login time to get.</param>
            <returns>User last login time.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.UpdateUserLastLoginTime(System.String)">
            <summary>
            Updates user last login time.
            </summary>
            <param name="userName">User name who's last login time to update.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetUserRemoteServers(System.String)">
            <summary>
            Gets user pop3 remote accounts.
            </summary>
            <param name="userName">User name. Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetUsers(System.String)">GetUsers()</see> to get valid values.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddUserRemoteServer(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds new remote pop3 server to user.
            </summary>
            <param name="serverID">Server ID. Suggested value is Guid.NewGuid() .</param>
            <param name="userName">User name. Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetUsers(System.String)">GetUsers()</see> to get valid values.</param>
            <param name="description">Remote server description.</param>
            <param name="remoteServer">Remote server name.</param>
            <param name="remotePort">Remote server port.</param>
            <param name="remoteUser">Remote server user name.</param>
            <param name="remotePassword">Remote server password.</param>
            <param name="useSSL">Specifies if SSL must be used to connect to remote server.</param>
            <param name="enabled">Specifies if remote server is enabled.</param>
            <remarks>Throws exception if specified user remote server already exists.</remarks>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteUserRemoteServer(System.String)">
            <summary>
            Deletes specified pop3 remote account from user.
            </summary>
            <param name="serverID">Remote server ID. Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetUserRemoteServers(System.String)">GetUserRemoteServers()</see> to get valid values.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.UpdateUserRemoteServer(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Updates user remote pop3 server.
            </summary>
            <param name="serverID">Server ID. Suggested value is Guid.NewGuid() .</param>
            <param name="userName">User name. Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetUsers(System.String)">GetUsers()</see> to get valid values.</param>
            <param name="description">Remote server description.</param>
            <param name="remoteServer">Remote server name.</param>
            <param name="remotePort">Remote server port.</param>
            <param name="remoteUser">Remote server user name.</param>
            <param name="remotePassword">Remote server password.</param>
            <param name="useSSL">Specifies if SSL must be used to connect to remote server.</param>
            <param name="enabled">Specifies if remote server is enabled.</param>
            <remarks>Throws exception if specified user remote server already exists.</remarks>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetUserMessageRules(System.String)">
            <summary>
            Gets user message  rules.
            </summary>
            <param name="userName">User name.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddUserMessageRule(System.String,System.String,System.Int64,System.Boolean,LumiSoft.MailServer.GlobalMessageRule_CheckNextRule_enum,System.String,System.String)">
            <summary>
            Adds new user message rule.
            </summary>
            <param name="userID">User who owns specified rule.</param>
            <param name="ruleID">Rule ID. Guid.NewID().ToString() is suggested.</param>
            <param name="cost">Cost specifies in what order rules are processed. Costs with lower values are processed first.</param>
            <param name="enabled">Specifies if rule is enabled.</param>
            <param name="checkNextRule">Specifies when next rule is checked.</param>
            <param name="description">Rule description.</param>
            <param name="matchExpression">Rule match expression.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteUserMessageRule(System.String,System.String)">
            <summary>
            Deletes specified user message rule.
            </summary>
            <param name="userID">User who owns specified rule.</param>
            <param name="ruleID">Rule ID.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.UpdateUserMessageRule(System.String,System.String,System.Int64,System.Boolean,LumiSoft.MailServer.GlobalMessageRule_CheckNextRule_enum,System.String,System.String)">
            <summary>
            Updates specified user message rule.
            </summary>
            <param name="userID">User who owns specified rule.</param>
            <param name="ruleID">Rule ID.</param>
            <param name="cost">Cost specifies in what order rules are processed. Costs with lower values are processed first.</param>
            <param name="enabled">Specifies if rule is enabled.</param>
            <param name="checkNextRule">Specifies when next rule is checked.</param>
            <param name="description">Rule description.</param>
            <param name="matchExpression">Rule match expression.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetUserMessageRuleActions(System.String,System.String)">
            <summary>
            Gets specified user message rule actions.
            </summary>
            <param name="userID">User who owns specified rule.</param>
            <param name="ruleID">Rule ID of rule which actions to get.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddUserMessageRuleAction(System.String,System.String,System.String,System.String,LumiSoft.MailServer.GlobalMessageRuleAction_enum,System.Byte[])">
            <summary>
            Adds action to specified user message rule.
            </summary>
            <param name="userID">User who owns specified rule.</param>
            <param name="ruleID">Rule ID to which to add this action.</param>
            <param name="actionID">Action ID. Guid.NewID().ToString() is suggested.</param>
            <param name="description">Action description.</param>
            <param name="actionType">Action type.</param>
            <param name="actionData">Action data. Data structure depends on action type.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteUserMessageRuleAction(System.String,System.String,System.String)">
            <summary>
            Deletes specified action from specified user message rule.
            </summary>
            <param name="userID">User who owns specified rule.</param>
            <param name="ruleID">Rule ID which action to delete.</param>
            <param name="actionID">Action ID of action which to delete.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.UpdateUserMessageRuleAction(System.String,System.String,System.String,System.String,LumiSoft.MailServer.GlobalMessageRuleAction_enum,System.Byte[])">
            <summary>
            Updates specified rule action.
            </summary>
            <param name="userID">User who owns specified rule.</param>
            <param name="ruleID">Rule ID which action to update.</param>
            <param name="actionID">Action ID of action which to update.</param>
            <param name="description">Action description.</param>
            <param name="actionType">Action type.</param>
            <param name="actionData">Action data. Data structure depends on action type.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AuthUser(System.String,System.String,System.String,LumiSoft.Net.AuthType)">
            <summary>
            Authenticates user.
            </summary>
            <param name="userName">User name.</param>
            <param name="passwData">Password data.</param>
            <param name="authData">Authentication specific data(as tag).</param>
            <param name="authType">Authentication type.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GroupExists(System.String)">
            <summary>
            Gets if specified user group exists.
            </summary>
            <param name="groupName">Group name.</param>
            <returns>Returns true, if user group exists.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetGroups">
            <summary>
            Gets user groups.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddGroup(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Adds new user group.
            </summary>
            <param name="groupID">Group ID. Guid.NewGuid().ToString() is suggested.</param>
            <param name="groupName">Group name.</param>
            <param name="description">Group description.</param>
            <param name="enabled">Specifies if group is enabled.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteGroup(System.String)">
            <summary>
            Deletes specified user group.
            </summary>
            <param name="groupID">Group ID.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.UpdateGroup(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Updates user group info.
            </summary>
            <param name="groupID">Group ID.</param>
            <param name="groupName">Group name.</param>
            <param name="description">Group description.</param>
            <param name="enabled">Specifies if group is enabled.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GroupMemberExists(System.String,System.String)">
            <summary>
            Gets if specified group member exists in specified user group members list.
            </summary>
            <param name="groupName">Group name</param>
            <param name="userOrGroup">User or group.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetGroupMembers(System.String)">
            <summary>
            Gets useer group members who belong to specified group.
            </summary>
            <param name="groupName">Group name.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddGroupMember(System.String,System.String)">
            <summary>
            Add specified user or group to specified goup members list.
            </summary>
            <param name="groupName">Group name.</param>
            <param name="userOrGroup">User or group.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteGroupMember(System.String,System.String)">
            <summary>
            Deletes specified user or group from specified group members list.
            </summary>
            <param name="groupName">Group name.</param>
            <param name="userOrGroup">User or group.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetGroupUsers(System.String)">
            <summary>
            Gets specified group users. All nested group members are replaced by actual users.
            </summary>
            <param name="groupName">Group name.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetGroupID(System.String)">
            <summary>
            Gets specified group ID from group name. Returns null, if specified group doesn't exist.
            </summary>
            <param name="groupName">Group name which ID to get.</param>
            <returns>Returns null, if specified group doesn't exist.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetMailingLists(System.String)">
            <summary>
            Gets mailing lists.
            </summary>
            <param name="domainName">Domain name. Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetDomains">GetDomains()</see> to get valid values.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddMailingList(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Adds new mailing list.
            </summary>
            <param name="mailingListID">Mailing list ID. Suggested value is Guid.NewGuid() .</param>
            <param name="mailingListName">Mailing list name name. Eg. all@lumisoft.ee .</param>
            <param name="description">Mailing list description.</param>
            <param name="domainName">Domain name. Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetDomains">GetDomains()</see> to get valid values.</param>
            <param name="enabled">Specifies if mailing list is enabled.</param>
            <remarks>Throws exception if specified mailing list already exists.</remarks>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteMailingList(System.String)">
            <summary>
            Deletes specified mailing list.
            </summary>
            <param name="mailingListID"> Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetMailingLists(System.String)">GetMailingLists()</see> to get valid values.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.UpdateMailingList(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Updates specified mailing list.
            </summary>
            <param name="mailingListID">Mailing list ID.</param>
            <param name="mailingListName">Mailing list name name. Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetMailingLists(System.String)">GetMailingLists()</see> to get valid values.</param>
            <param name="description">Mailing list description.</param>
            <param name="domainName">Domain name. Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetDomains">&gt;GetUsers()</see> to get valid values.</param>
            <param name="enabled">Specifies if mailing list is enabled.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddMailingListAddress(System.String,System.String,System.String)">
            <summary>
            Add new email address to specified mailing list.
            </summary>
            <param name="addressID">Address ID. Suggested value is Guid.NewGuid() .</param>
            <param name="mailingListName">Mailing list name name. Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetMailingLists(System.String)">GetMailingLists()</see> to get valid values.</param>
            <param name="address">Mailing list member address.</param>
            <remarks>Throws exception if specified mailing list member already exists.</remarks>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteMailingListAddress(System.String)">
            <summary>
            Deletes specified email address from mailing list. 
            </summary>
            <param name="addressID">Mailing list member address ID. Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetMailingListAddresses(System.String)">GetMailingListMembers()</see> to get valid values.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetMailingListAddresses(System.String)">
            <summary>
            Gets mailing list members.
            </summary>
            <param name="mailingListName">Mailing list name name. Use <see cref="M:LumiSoft.MailServer.IMailServerApi.GetMailingLists(System.String)">GetMailingLists()</see> to get valid values.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetMailingListACL(System.String)">
            <summary>
            Gets mailing list ACL list.
            </summary>
            <param name="mailingListName">Mailing list name.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddMailingListACL(System.String,System.String)">
            <summary>
            Adds specified user or group to mailing list ACL list (specified user can send messages to the specified mailing list).
            </summary>
            <param name="mailingListName">Mailing list name.</param>
            <param name="userOrGroup">User or group name.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteMailingListACL(System.String,System.String)">
            <summary>
            Deletes specified user or group from mailing list ACL list.
            </summary>
            <param name="mailingListName">Mailing list name.</param>
            <param name="userOrGroup">User or group name.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.CanAccessMailingList(System.String,System.String)">
            <summary>
            Checks if specified user can access specified mailing list.
            There is one built-in user <b>anyone</b>, that represent all users (including anonymous).
            </summary>
            <param name="mailingListName">Mailing list name.</param>
            <param name="user">User name.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.MailingListExists(System.String)">
            <summary>
            Checks if user exists.
            </summary>
            <param name="mailingListName">Mailing list name.</param>
            <returns>Returns true if mailing list exists.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetGlobalMessageRules">
            <summary>
            Gets global message rules.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddGlobalMessageRule(System.String,System.Int64,System.Boolean,LumiSoft.MailServer.GlobalMessageRule_CheckNextRule_enum,System.String,System.String)">
            <summary>
            Adds new global message rule.
            </summary>
            <param name="ruleID">Rule ID. Guid.NewID().ToString() is suggested.</param>
            <param name="cost">Cost specifies in what order rules are processed. Costs with lower values are processed first.</param>
            <param name="enabled">Specifies if rule is enabled.</param>
            <param name="checkNextRule">Specifies when next rule is checked.</param>
            <param name="description">Rule description.</param>
            <param name="matchExpression">Rule match expression.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteGlobalMessageRule(System.String)">
            <summary>
            Deletes specified global message rule.
            </summary>
            <param name="ruleID">Rule ID of rule which to delete.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.UpdateGlobalMessageRule(System.String,System.Int64,System.Boolean,LumiSoft.MailServer.GlobalMessageRule_CheckNextRule_enum,System.String,System.String)">
            <summary>
            Updates specified global message rule.
            </summary>
            <param name="ruleID">Rule ID.</param>
            <param name="cost">Cost specifies in what order rules are processed. Costs with lower values are processed first.</param>
            <param name="enabled">Specifies if rule is enabled.</param>
            <param name="checkNextRule">Specifies when next rule is checked.</param>
            <param name="description">Rule description.</param>
            <param name="matchExpression">Rule match expression.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GlobalMessageRuleExists(System.String)">
            <summary>
            Gets is global message rule with specified ruleID exists.
            </summary>
            <param name="ruleID">Rule ID of rule what to check.</param>
            <returns>Returns true if rule exists.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetGlobalMessageRuleActions(System.String)">
            <summary>
            Gets specified global message rule actions.
            </summary>
            <param name="ruleID">Rule ID of rule which actions to get.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddGlobalMessageRuleAction(System.String,System.String,System.String,LumiSoft.MailServer.GlobalMessageRuleAction_enum,System.Byte[])">
            <summary>
            Adds action to specified global message rule.
            </summary>
            <param name="ruleID">Rule ID to which to add this action.</param>
            <param name="actionID">Action ID. Guid.NewID().ToString() is suggested.</param>
            <param name="description">Action description.</param>
            <param name="actionType">Action type.</param>
            <param name="actionData">Action data. Data structure depends on action type.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteGlobalMessageRuleAction(System.String,System.String)">
            <summary>
            Deletes specified action from specified global message rule.
            </summary>
            <param name="ruleID">Rule ID which action to delete.</param>
            <param name="actionID">Action ID of action which to delete.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.UpdateGlobalMessageRuleAction(System.String,System.String,System.String,LumiSoft.MailServer.GlobalMessageRuleAction_enum,System.Byte[])">
            <summary>
            Updates specified rule action.
            </summary>
            <param name="ruleID">Rule ID which action to update.</param>
            <param name="actionID">Action ID of action which to update.</param>
            <param name="description">Action description.</param>
            <param name="actionType">Action type.</param>
            <param name="actionData">Action data. Data structure depends on action type.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetRoutes">
            <summary>
            Gets email address routes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddRoute(System.String,System.Int64,System.Boolean,System.String,System.String,LumiSoft.MailServer.RouteAction_enum,System.Byte[])">
            <summary>
            Adds new route.
            </summary>
            <param name="routeID">Route ID.</param>
            <param name="cost">Cost specifies in what order roues are processed. Costs with lower values are processed first.</param>
            <param name="enabled">Specifies if route is enabled.</param>
            <param name="description">Route description text.</param>
            <param name="pattern">Match pattern. For example: *,*@domain.com,*sales@domain.com.</param>
            <param name="action">Specifies route action.</param>
            <param name="actionData">Route action data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteRoute(System.String)">
            <summary>
            Deletes route.
            </summary>
            <param name="routeID">Route ID.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.UpdateRoute(System.String,System.Int64,System.Boolean,System.String,System.String,LumiSoft.MailServer.RouteAction_enum,System.Byte[])">
            <summary>
            Updates route.
            </summary>
            <param name="routeID">Route ID.</param>
            <param name="cost">Cost specifies in what order roues are processed. Costs with lower values are processed first.</param>
            <param name="enabled">Specifies if route is enabled.</param>
            <param name="description">Route description text.</param>
            <param name="pattern">Match pattern. For example: *,*@domain.com,*sales@domain.com.</param>
            <param name="action">Specifies route action.</param>
            <param name="actionData">Route action data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetMessagesInfo(System.String,System.String,System.String,System.Collections.Generic.List{LumiSoft.Net.IMAP.Server.IMAP_MessageInfo})">
            <summary>
            Gets specified IMAP folder messages info. 
            </summary>
            <param name="accessingUser">User who accesses this method. 
            User needs r permission to call this method or Exception is thrown. 
            There is special user 'system' for which permission check is skipped.</param>
            <param name="folderOwnerUser">User who's folder it is.</param>
            <param name="folder">Folder what messages info to get. For example: Inbox,Public Folders/Documnets .</param>
            <param name="messageInfos">List where to store folder messages info.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.StoreMessage(System.String,System.String,System.String,System.IO.Stream,System.DateTime,System.String[])">
            <summary>
            Stores message to specified folder.
            </summary>
            <param name="accessingUser">User who accesses this method. 
            User needs r permission to call this method or Exception is thrown. 
            There is special user 'system' for which permission check is skipped.</param>
            <param name="folderOwnerUser">User who's folder it is.</param>
            <param name="folder">Folder where to store message. For example: Inbox,Public Folders/Documnets .</param>
            <param name="msgStream">Stream where message has stored. Stream position must be at the beginning of the message.</param>
            <param name="date">Recieve date.</param>
            <param name="flags">Message flags.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.StoreMessageFlags(System.String,System.String,System.String,LumiSoft.Net.IMAP.Server.IMAP_MessageInfo,System.String[])">
            <summary>
            Stores IMAP message flags (\seen,\draft, ...).
            </summary>
            <param name="accessingUser">User who accesses this method. 
            User needs r permission to call this method or Exception is thrown. 
            There is special user 'system' for which permission check is skipped.</param>
            <param name="folderOwnerUser">User who's folder it is.</param>
            <param name="folder">Folder which message flags to store. For example: Inbox,Public Folders/Documnets .</param>
            <param name="messageInfo">IMAP message info.</param>
            <param name="flags">Message flags.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteMessage(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Deletes message from mailbox.
            </summary>
            <param name="accessingUser">User who accesses this method. 
            User needs r permission to call this method or Exception is thrown. 
            There is special user 'system' for which permission check is skipped.</param>
            <param name="folderOwnerUser">User who's folder it is.</param>
            <param name="folder">Folder what message to delete. For example: Inbox,Public Folders/Documnets .</param>
            <param name="messageID">Message ID.</param>
            <param name="uid">Message UID value.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetMessageItems(System.String,System.String,System.String,LumiSoft.MailServer.EmailMessageItems)">
            <summary>
            Gets specified message specified items.
            </summary>
            <param name="accessingUser">User who accesses this method. 
            User needs r permission to call this method or Exception is thrown. 
            There is special user 'system' for which permission check is skipped.</param>
            <param name="folderOwnerUser">User who's folder it is.</param>
            <param name="folder">Folder what message to delete. For example: Inbox,Public Folders/Documnets .</param>
            <param name="e">MessageItems info.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetMessageTopLines(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Gets message header + number of specified lines.
            </summary>
            <param name="accessingUser">User who accesses this method. 
            User needs r permission to call this method or Exception is thrown. 
            There is special user 'system' for which permission check is skipped.</param>
            <param name="folderOwnerUser">User who's folder it is.</param>
            <param name="folder">Folder what message top lines to get. For example: Inbox,Public Folders/Documnets .</param>
            <param name="msgID">MessageID.</param>
            <param name="nrLines">Number of lines to retrieve. NOTE: line counting starts at the end of header.</param>
            <returns>Returns message header + number of specified lines.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.CopyMessage(System.String,System.String,System.String,System.String,System.String,LumiSoft.Net.IMAP.Server.IMAP_MessageInfo)">
            <summary>
            Creates copy of message to destination IMAP folder.
            </summary>
            <param name="accessingUser">User who accesses this method. 
            User needs r permission to call this method or Exception is thrown. 
            There is special user 'system' for which permission check is skipped.</param>
            <param name="folderOwnerUser">User who's folder it is.</param>
            <param name="folder">Folder what contains message to copy. For example: Inbox,Public Folders/Documnets .</param>
            <param name="destFolderUser">Destination IMAP folder owner user name.</param>
            <param name="destFolder">Destination IMAP folder name.</param>
            <param name="messageInfo">IMAP message info.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.Search(System.String,System.String,System.String,LumiSoft.Net.IMAP.Server.IMAP_e_Search)">
            <summary>
            Searhes specified folder messages which match to search criteria.
            </summary>
            <param name="accessingUser">User who accesses this method. 
            User needs r permission to call this method or Exception is thrown. 
            There is special user 'system' for which permission check is skipped.</param>
            <param name="folderOwnerUser">User who's folder it is.</param>
            <param name="folder">Folder what messages info to get. For example: Inbox,Public Folders/Documnets .</param>
            <param name="e">IMAP search event data.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetFolders(System.String,System.Boolean)">
            <summary>
            Gets all available IMAP folders.
            </summary>
            <param name="userName">User name who's folders to get.</param>
            <param name="includeSharedFolders">If true, shared folders are included.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.FolderExists(System.String)">
            <summary>
            Gets if specified folder exists.
            </summary>
            <param name="folderName">Folder name which to check. Eg. UserName/Inbox,UserName/Inbox/subfolder.</param>
            <returns>Returns true if folder exists, otherwise false.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.CreateFolder(System.String,System.String,System.String)">
            <summary>
            Creates new IMAP folder.
            </summary>
            <param name="accessingUser">User who accesses this method. 
            User needs r permission to call this method or Exception is thrown. 
            There is special user 'system' for which permission check is skipped.</param>
            <param name="folderOwnerUser">User who's folder it is.</param>
            <param name="folder">Folder what to create. For example: Inbox,Public Folders/Documnets .</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteFolder(System.String,System.String,System.String)">
            <summary>
            Deletes IMAP folder.
            </summary>
            <param name="accessingUser">User who accesses this method. 
            User needs r permission to call this method or Exception is thrown. 
            There is special user 'system' for which permission check is skipped.</param>
            <param name="folderOwnerUser">User who's folder it is.</param>
            <param name="folder">Folder what to delete. For example: Inbox,Public Folders/Documnets .</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.RenameFolder(System.String,System.String,System.String,System.String)">
            <summary>
            Renames IMAP folder.
            </summary>
            <param name="accessingUser">User who accesses this method. 
            User needs r permission to call this method or Exception is thrown. 
            There is special user 'system' for which permission check is skipped.</param>
            <param name="folderOwnerUser">User who's folder it is.</param>
            <param name="folder">Folder what to delete. For example: Trash,Public Folders/Documnets .</param>
            <param name="newFolder">New folder name.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.FolderCreationTime(System.String,System.String)">
            <summary>
            Gets time when specified folder was created.
            </summary>
            <param name="folderOwnerUser">User who's folder it is.</param>
            <param name="folder">Folder what creation time to get. For example: Inbox,Public Folders/Documnets .</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetSubscribedFolders(System.String)">
            <summary>
            Gets subscribed IMAP folders.
            </summary>
            <param name="userName"></param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.SubscribeFolder(System.String,System.String)">
            <summary>
            Subscribes new IMAP folder.
            </summary>
            <param name="userName"></param>
            <param name="folder"></param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.UnSubscribeFolder(System.String,System.String)">
            <summary>
            UnSubscribes IMAP folder.
            </summary>
            <param name="userName"></param>
            <param name="folder"></param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.SharedFolderRootExists(System.String)">
            <summary>
            Gets if specified shared root folder exists. Returns true, if root folder exists.
            </summary>
            <param name="rootFolder">Root folder name.</param>
            <returns>Returns true, if root folder exists.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetSharedFolderRoots">
            <summary>
            Gets shared folder root folders.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddSharedFolderRoot(System.String,System.Boolean,System.String,System.String,LumiSoft.MailServer.SharedFolderRootType_enum,System.String,System.String)">
            <summary>
            Add shared folder root.
            </summary>
            <param name="rootID">Root folder ID. Guid.NewID().ToString() is suggested.</param>
            <param name="enabled">Specifies if root folder is enabled.</param>
            <param name="folder">Folder name which will be visible to public.</param>
            <param name="description">Description text.</param>
            <param name="rootType">Specifies what type root folder is.</param>
            <param name="boundedUser">User which to bound root folder.</param>
            <param name="boundedFolder">Folder which to bound to public folder.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteSharedFolderRoot(System.String)">
            <summary>
            Deletes shard folders root folder.
            </summary>
            <param name="rootID">Root folder ID which to delete.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.UpdateSharedFolderRoot(System.String,System.Boolean,System.String,System.String,LumiSoft.MailServer.SharedFolderRootType_enum,System.String,System.String)">
            <summary>
            Updates shared folder root.
            </summary>
            <param name="rootID">Root Folder which to update.</param>
            <param name="enabled">Specifies if root folder is enabled.</param>
            <param name="folder">Folder name which will be visible to public.</param>
            <param name="description">Description text.</param>
            <param name="rootType">Specifies what type root folder is.</param>
            <param name="boundedUser">User which to bound root folder.</param>
            <param name="boundedFolder">Folder which to bound to public folder.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetFolderACL(System.String,System.String,System.String)">
            <summary>
            Gets specified folder ACL.
            </summary>
            <param name="accessingUser">User who accesses this method. 
            User needs r permission to call this method or Exception is thrown. 
            There is special user 'system' for which permission check is skipped.</param>
            <param name="folderOwnerUser">User who's folder it is.</param>
            <param name="folder">Folder what ACL to get. For example: Inbox,Public Folders/Documnets .</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteFolderACL(System.String,System.String,System.String,System.String)">
            <summary>
            Deletes specified folder ACL for specified user.
            </summary>
            <param name="accessingUser">User who accesses this method. 
            User needs r permission to call this method or Exception is thrown. 
            There is special user 'system' for which permission check is skipped.</param>
            <param name="folderOwnerUser">User who's folder it is.</param>
            <param name="folder">Folder what ACL to delete. For example: Inbox,Public Folders/Documnets .</param>
            <param name="userOrGroup">User or user group which ACL on specified folder to delete.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.SetFolderACL(System.String,System.String,System.String,System.String,LumiSoft.Net.IMAP.IMAP_Flags_SetType,LumiSoft.Net.IMAP.IMAP_ACL_Flags)">
            <summary>
            Sets specified folder ACL for specified user.
            </summary>
            <param name="accessingUser">User who accesses this method. 
            User needs r permission to call this method or Exception is thrown. 
            There is special user 'system' for which permission check is skipped.</param>
            <param name="folderOwnerUser">User who's folder it is.</param>
            <param name="folder">Folder what ACL to set. For example: Inbox,Public Folders/Documnets .</param>
            <param name="userOrGroup">>User or user which group ACL set to specified folder.</param>
            <param name="setType">Specifies how ACL flags must be stored (ADD,REMOVE,REPLACE).</param>
            <param name="aclFlags">ACL flags.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetUserACL(System.String,System.String,System.String)">
            <summary>
            Gets what permissions specified user has to specified folder.
            </summary>
            <param name="folderOwnerUser">User who's folder it is.</param>
            <param name="folder">Folder which ACL to get. For example Inbox,Public Folders.</param>
            <param name="user">User name which ACL to get.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.CreateUserDefaultFolders(System.String)">
            <summary>
            Creates specified user default folders, if they don't exist already.
            </summary>
            <param name="userName">User name to who's default folders to create.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetUsersDefaultFolders">
            <summary>
            Gets users default folders.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddUsersDefaultFolder(System.String,System.Boolean)">
            <summary>
            Adds users default folder.
            </summary>
            <param name="folderName">Folder name.</param>
            <param name="permanent">Spcifies if folder is permanent, user can't delete it.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteUsersDefaultFolder(System.String)">
            <summary>
            Deletes specified users default folder.
            </summary>
            <param name="folderName">Folder name.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetMailboxSize(System.String)">
            <summary>
            Gets specified user mailbox size.
            </summary>
            <param name="userName">User name.</param>
            <returns>Returns mailbox size.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetRecycleBinSettings">
            <summary>
            Gets recycle bin settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.UpdateRecycleBinSettings(System.Boolean,System.Int32)">
            <summary>
            Updates recycle bin settings.
            </summary>
            <param name="deleteToRecycleBin">Specifies if deleted messages are store to recycle bin.</param>
            <param name="deleteMessagesAfter">Specifies how old messages will be deleted.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetRecycleBinMessagesInfo(System.String,System.DateTime,System.DateTime)">
            <summary>
            Gets recycle bin messages info. 
            </summary>
            <param name="user">User who's recyclebin messages to get or null if all users messages.</param>
            <param name="startDate">Messages from specified date. Pass DateTime.MinValue if not used.</param>
            <param name="endDate">Messages to specified date. Pass DateTime.MinValue if not used.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetRecycleBinMessage(System.String)">
            <summary>
            Gets recycle bin message stream. NOTE: This method caller must take care of closing stream. 
            </summary>
            <param name="messageID">Message ID if of message what to get.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteRecycleBinMessage(System.String)">
            <summary>
            Deletes specified recycle bin message.
            </summary>
            <param name="messageID">Message ID.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.RestoreRecycleBinMessage(System.String)">
            <summary>
            Restores specified recycle bin message.
            </summary>
            <param name="messageID">Message ID.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetSecurityList">
            <summary>
            Gets security entries list.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddSecurityEntry(System.String,System.Boolean,System.String,LumiSoft.MailServer.Service_enum,LumiSoft.MailServer.IPSecurityAction_enum,System.Net.IPAddress,System.Net.IPAddress)">
            <summary>
            Adds new IP security entry.
            </summary>
            <param name="id">IP security entry ID.</param>
            <param name="enabled">Specifies if IP security entry is enabled.</param>
            <param name="description">IP security entry description text.</param>
            <param name="service">Specifies service for what security entry applies.</param>
            <param name="action">Specifies what action done if IP matches to security entry range.</param>
            <param name="startIP">Range start IP.</param>
            <param name="endIP">Range end IP.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteSecurityEntry(System.String)">
            <summary>
            Deletes security entry.
            </summary>
            <param name="id">IP security entry ID.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.UpdateSecurityEntry(System.String,System.Boolean,System.String,LumiSoft.MailServer.Service_enum,LumiSoft.MailServer.IPSecurityAction_enum,System.Net.IPAddress,System.Net.IPAddress)">
            <summary>
            Updates IP security entry.
            </summary>
            <param name="id">IP security entry ID.</param>
            <param name="enabled">Specifies if IP security entry is enabled.</param>
            <param name="description">IP security entry description text.</param>
            <param name="service">Specifies service for what security entry applies.</param>
            <param name="action">Specifies what action done if IP matches to security entry range.</param>
            <param name="startIP">Range start IP.</param>
            <param name="endIP">Range end IP.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetFilters">
            <summary>
            Gets filter list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddFilter(System.String,System.String,System.String,System.String,System.String,System.Int64,System.Boolean)">
            <summary>
            Adds new filter.
            </summary>
            <param name="filterID">Filter ID. Suggested value is Guid.NewGuid() .</param>
            <param name="description">Filter description</param>
            <param name="type">Filter type. Eg. ISmtpMessageFilter.</param>
            <param name="assembly">Assembly with full location. Eg. C:\MailServer\Filters\filter.dll .</param>
            <param name="className">Filter full class name, wih namespace. Eg. LumiSoft.MailServer.Fileters.Filter1 .</param>
            <param name="cost">Filters are sorted by cost and proccessed with cost value. Smallest cost is proccessed first.</param>
            <param name="enabled">Specifies if filter is enabled.</param>
            <remarks>Throws exception if specified filter entry already exists.</remarks>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.DeleteFilter(System.String)">
            <summary>
            Deletes specified filter.
            </summary>
            <param name="filterID">FilterID of the filter which to delete.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.UpdateFilter(System.String,System.String,System.String,System.String,System.String,System.Int64,System.Boolean)">
            <summary>
            Updates specified filter.
            </summary>		
            <param name="filterID">FilterID which to update.</param>
            <param name="description">Filter description</param>
            <param name="type">Filter type. Eg. ISmtpMessageFilter.</param>
            <param name="assembly">Assembly with full location. Eg. C:\MailServer\Filters\filter.dll .</param>
            <param name="className">Filter full class name, wih namespace. Eg. LumiSoft.MailServer.Fileters.Filter1 .</param>
            <param name="cost">Filters are sorted by cost and proccessed with cost value. Smallest cost is proccessed first.</param>
            <param name="enabled">Specifies if filter is enabled.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetSettings">
            <summary>
            Gets server settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.UpdateSettings(System.Data.DataRow)">
            <summary>
            Updates server settings.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadDomains">
            <summary>
             Loads domains from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadUsers">
            <summary>
            Loads users from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadUserAddresses">
            <summary>
            Loads users from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadUserRemoteServers">
            <summary>
            Loads users from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadUserMessageRules">
            <summary>
            Loads message ruels from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadUserMessageRuleActions">
            <summary>
            Loads user message rule actions from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadGroups">
            <summary>
            Loads user groups from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadGroupMembers">
            <summary>
            Load user goruops members from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadMailingLists">
            <summary>
            Loads mailing lists from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadMailingListAddresses">
            <summary>
            Loads mailing lists addresses from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadMailingListACL">
            <summary>
            Load mailing list ACl from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadGlobalMessageRules">
            <summary>
             Loads global message rules from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadGlobalMessageRuleActions">
            <summary>
            Loads global message rule actions from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadRouting">
            <summary>
             Loads routing from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadSecurity">
            <summary>
             Loads security from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadFilters">
            <summary>
             Loads filters from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.Load_IMAP_ACL">
            <summary>
             Loads IMAP ACL from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.Load_SharedFolders_Roots">
            <summary>
            Loads Shared Folder Roots from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadUsersDefaultFolders">
            <summary>
            Loads users default folders from xml file.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadRecycleBinSettings">
            <summary>
            Loads recycle bin settings from xml.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetSharedFolderRoot(System.String)">
            <summary>
            Gets specified shared root folder. If root folder doesn't exist, returns null.
            </summary>
            <param name="rootFolder">Root folder name.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.IsUserGroupMember(System.String,System.String)">
            <summary>
            Gets if specified user is specified user group member. Returns true if user is user group member.
            </summary>
            <param name="group">User group name.</param>
            <param name="user">User name.</param>
            <returns>Returns true if user is user group member.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetGroup(System.String)">
            <summary>
            Gets specified user group. If group doesn't exist, returns null;
            </summary>
            <param name="group">User group name.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetMailingList(System.String)">
            <summary>
            Gets specified mailing list or returns null if mailing list doesn't exist.
            </summary>
            <param name="mailingListName">Mailing list name.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.MapSharedFolder(System.String)">
            <summary>
            If folder is Shared Folder, then maps folder to actual account.
            </summary>
            <param name="folder">Folder to map.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.CreateMessageInfo(System.String)">
            <summary>
            Creates specified message cache record.
            </summary>
            <param name="file">File name of file which cache record to do.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.NormalizeFolder(System.String)">
            <summary>
            Normalizes folder path. For example: aaa/test/, will be aaa/test.
            </summary>
            <param name="folderPath">Folder path with folder name.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.CalculateMailboxSize(System.String)">
            <summary>
            Calculates specified user mailbox size.
            </summary>
            <param name="userName">User name.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.ChangeMailboxSize(System.String,System.Int64)">
            <summary>
            Changes specified user mailbox size by specified value.
            </summary>
            <param name="userName">User name.</param> 
            <param name="size">If value is positive, then specified value is added to mailbox.
            If negative, then value is removed from mailbox size.
            </param>
            <returns>Returns new mailbox size.</returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.OpenOrCreateFile(System.String,System.Int32)">
            <summary>
            Opens or creates specified file. Opened file is with exclusive lock.
            </summary>
            <param name="fileName">File name with full path.</param>
            <param name="lockTimeOut">File unlock wait time in milliseconds. 
            Waits specified time for file to unlock, if times out, exception is thrown.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.OpenOrCreateFile(System.String,System.Int32,System.Boolean)">
            <summary>
            Opens or creates specified file. Opened file is with exclusive lock.
            </summary>
            <param name="fileName">File name with full path.</param>
            <param name="lockTimeOut">File unlock wait time in milliseconds. 
            Waits specified time for file to unlock, if times out, exception is thrown.</param>
            <param name="lockOnlyIfCreated">If true file is locked only if it's created, otherwise file is always locked.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetFileSytemFolders(System.String,System.Boolean)">
            <summary>
            Gets specified path folders, all child foders are included.
            </summary>
            <param name="path">Path what folders to get.</param>
            <param name="fullPath">If ture than full long path folder returned (path\xxx\aaa), otherwise folders are relative to path ((no_path_\)xxx\bbb).</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.RemovePathRoot(System.String,System.String)">
            <summary>
            Removes specified root part of the specified path. Returns null root-part is not part of path.
            </summary>
            <param name="root">Root part of the path.</param>
            <param name="path">Full ptaht.</param>
            <returns>Returns specified root part of the specified path or null if root-part is not part of path.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>root</b> or <b>path</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetNextUid(System.String,System.String)">
            <summary>
            Gets folder next UID value.
            </summary>
            <param name="userName">User name who's folder UID to get.</param>
            <param name="folder">Folder which UID to get.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.CreateMessageFileName(System.DateTime,System.Int32)">
            <summary>
            Creates message file name.
            </summary>
            <param name="internalDate">Message internal date.</param>
            <param name="uid">Message UID value.</param>
            <returns></returns>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.LoadDataSetDefaults(System.Data.DataSet)">
            <summary>
            Replaces DbNull values with column default value in all tables.
            </summary>
            <param name="ds">DataSet where to replace null values.</param>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.GetMessagesInfoSqlCon(System.String,System.String)">
            <summary>
            Gets messages info sql connection.
            </summary>
            <param name="user">User name.</param>
            <param name="folder">User-relative folder name with optional path.</param>
            <returns>Returns messages info sql connection.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>user</b> or <b>folder</b> is null reference.</exception>
            <exception cref="T:System.ArgumentException">Is raised when any of the arguments has invalid value.</exception>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.AddMessageInfo(System.Data.SQLite.SQLiteConnection,System.String,System.String,System.Int64,System.Int64,System.String[],System.DateTime)">
            <summary>
            Appends specified message infot messages info database.
            </summary>
            <param name="sqlCon">SQL connection.</param>
            <param name="msgFile">Full ptaht to message file.</param>
            <param name="id">Message ID.</param>
            <param name="uid">Message IMAP UID.</param>
            <param name="size">Message size in bytes.</param>
            <param name="flags">Message flags.</param>
            <param name="internalDate">Message internal date.</param>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>sqlCon</b>,<b>msgFile</b> or <b>id</b> is null reference.</exception>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.SearchCriteriaToSql(LumiSoft.Net.IMAP.IMAP_Search_Key,System.Collections.Generic.Dictionary{System.Int64,System.Int64})">
            <summary>
            Converts IMAP search criteria to "sql where" filter.
            </summary>
            <param name="key">IMAP search key.</param>
            <param name="seqNo_to_UID">Sequence number to UI map table.</param>
            <returns>Returns "sql where" filter.</returns>
            <exception cref="T:System.ArgumentNullException">Is raised when <b>key</b> is null reference.</exception>
        </member>
        <member name="T:LumiSoft.MailServer.xml_API.SharedFolderMapInfo">
            <summary>
            This call holds shaared folder mapping info.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer.xml_API.SharedFolderMapInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="originalFolder"></param>
            <param name="folderOwner"></param>
            <param name="folder"></param>
            <param name="sharedRootName"></param>
        </member>
        <member name="P:LumiSoft.MailServer.xml_API.SharedFolderMapInfo.OriginalFolder">
            <summary>
            Gets original folder.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.xml_API.SharedFolderMapInfo.FolderOnwer">
            <summary>
            Shared folder owner. This is available only if OriginalFolder is shared folder.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.xml_API.SharedFolderMapInfo.Folder">
            <summary>
            Gets shared folder owner folder. This is available only if OriginalFolder is shared folder.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.xml_API.SharedFolderMapInfo.SharedRootName">
            <summary>
            Gets shared root folder name. This is available only if OriginalFolder is shared folder.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer.xml_API.SharedFolderMapInfo.IsSharedFolder">
            <summary>
            Gets if OriginalFolder is shared folder.
            </summary>
        </member>
        <member name="T:LumiSoft.MailServer._InternalHeader">
            <summary>
            Internal .eml file header. Obsolete, get rid of in new versions.
            </summary>
        </member>
        <member name="M:LumiSoft.MailServer._InternalHeader.#ctor(System.IO.FileStream)">
            <summary>
            Default constructor.
            </summary>
            <param name="fs">Message file stream.</param>
        </member>
        <member name="P:LumiSoft.MailServer._InternalHeader.MessageFlags">
            <summary>
            Gets message flags.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer._InternalHeader.Envelope">
            <summary>
            Gets messgae IMAP ENVELOPE.
            </summary>
        </member>
        <member name="P:LumiSoft.MailServer._InternalHeader.Body">
            <summary>
            Gets message IMAP BODY.
            </summary>
        </member>
    </members>
</doc>
